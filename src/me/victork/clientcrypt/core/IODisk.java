package me.victork.clientcrypt.core;

import java.io.DataOutputStream;
import java.io.File;
import java.io.FileOutputStream;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.UUID;

import me.victork.clientcrypt.main.ClientCrypt;

/**
 * Class that takes care of Input/Ouput to and from disk
 * @author victor
 *
 * File format
 * --Date--
 * --UUID--
 * --Warning do NOT change this file or information won't be recoverable---
 * --Generated by ClientCrypt vXX
 * --Algorithm used:Algorithm--
 * ===
 * password:(if asked to be put)
 * password
 * ===
 * unencrypted_text:
 * qweqeqw
 * eqweqweqweqweqweqw
 * ===
 * encrypted_text:
 * ahaseqweqw
 * wqeqweqwe
 * qwewqeqwe
 * ===
 * --end--
 */
public class IODisk {
	
	public static String SEPARATOR="===\n";
	
	private String password="password";
	private String algorithm="blabla";
	private String unencrypted_txt="blabla";
	private String encrypted_txt="blabla";
	
	public void setPassword(String pass){
		password= pass;
	}

	public void setAlgorithm(String algo){
		algorithm=algo;
	}

	public void setUnencrypted_txt(String u_t){
		unencrypted_txt=u_t;
	}

	public void setEncrypted_txt(String e_t){
		encrypted_txt=e_t;
	}
	
	
	private String filename="ccrypt_ouput.priv";
	
	public void save_to_file(){
		try{
			File fts = new File(filename);
			DataOutputStream dos = new DataOutputStream(new FileOutputStream(fts));
			dos.writeBytes(build_head());
			dos.writeBytes(build_body());
			dos.writeBytes(build_bottom());
			
		}catch(Exception ex){
			System.out.println(ex.toString());
		}
	}
	
	private String build_head(){
		StringBuilder sb = new StringBuilder();
		SimpleDateFormat simple_date = new SimpleDateFormat("yyyy/MM/dd-kk-mm:ss.SSSS");
		Date date = new Date();

		sb.append("--").append(simple_date.format(date)).append("--").append("\n");
		UUID uuid = UUID.randomUUID();
		sb.append("--").append(uuid.toString()).append("--").append("\n");
		
		sb.append("--Warning do NOT change this file or information won't be recoverable--").append("\n");
		sb.append("--Generated by ClientCrypt v").append(ClientCrypt.VERSION_NUMBER).append("--\n");
		sb.append("--Algorithm used:").append(algorithm).append("--\n");
		return sb.toString();
	}
	
	private String build_body(){
		StringBuilder sb= new StringBuilder();
		if(!password.isEmpty()){
			sb.append(SEPARATOR);
			sb.append("password:").append("\n");
			sb.append(password);
			sb.append("\n");
		}
		
		if(!unencrypted_txt.isEmpty()){
			sb.append(SEPARATOR);
			sb.append("unencrypted_text:").append("\n");
			sb.append(unencrypted_txt);
			sb.append("\n");
		}
		
		if(!encrypted_txt.isEmpty()){
			sb.append(SEPARATOR);
			sb.append("encrypted_text:").append("\n");
			sb.append(encrypted_txt);
			sb.append("\n");
		}
		sb.append(SEPARATOR);
		return sb.toString();
	}
	
	private String build_bottom(){
		return "--end--";
	}

}
